# --------------------
#
# Welcome to Conventional Commit Messages!
#
#   Scroll & Edit this text as if editing a file with VIM editor to Save a Commit.
#   VIM tips visit https://www.keycdn.com/blog/vim-commands#simple-vim-workflow-example
#   All lines that started with a '#' will not show up in the commit message when you `:wq`
#   Uncomment the lines with <variables>, and Populate them with actual info:
#
#
# ----------START-OF-COMMIT-MESSAGE----------
#
# <type>(<scope>): <subject>
#
# Motivation: <optional text here>
#
# <optional Git Issues references on this line>
#
# ----------END-OF-COMMIT-MESSAGE----------
#
# Types Can Be:
#
#    feat     (new feature for the user, not a new feature for build script)
#    fix      (bug fix for the user, not a fix to a build script)
#    refactor (refactoring code, eg. renaming a variable)
#    style    (formatting, missing semi colons, etc; no code change)
#    test     (adding missing tests, refactoring tests; no production code change)
#    version  (version bump/new release; no production code change)
#    WIP      (Work In Progress; for intermediate commits to keep patches reasonably sized)
#    license  (Edits regarding licensing; no production code change)
#    docs     (changes to documentation)
#    defaults (changes default options)
#    jsrXXX   (Patches related to the implementation of jsrXXX, where XXX the JSR number)
#    jdkX     (Patches related to supporting jdkX as the host VM, where X the JDK version)
#    dbg      (Changes in debugging code/frameworks; no production code change)
#    hack     (Temporary fix to make things move forward; please avoid it)
#
# --------------------
# Remember:
#   * Capitalize the subject line
#   * Try to use the imperative mood in the subject line
#   * Do not end the subject line with a period
#   * Separate subject from body with a blank line
#   * Use the 'Motivation:' to explain the 'what' and 'why' vs. 'how'
#   * You can use multiple lines with "-" or "*" for bullet points in body
#   * Multiple tags can be combined, e.g. [fix][jsr292] Fix issue X with methodhandles
# |<----   Try To Limit Each Line to a Maximum Of 72 Characters   ---->|
#
#
# --------------------
# Here's a cool 90s-styled text graphic example:
#
#   feat(app.py): add hat wobble
#   ^--^  ^---^   ^------------^
#   |     |       |
#   |     |        +-> Subject: describes what
#   |     |
#   |     +-> Scope: `app.py` is the scope of this `feat` commit
#   |
#   +-------> Type: this commit specifies it is a new feature for the user
